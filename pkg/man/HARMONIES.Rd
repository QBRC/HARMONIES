% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HARMONIES.R, R/main.R
\docType{package}
\name{HARMONIES}
\alias{HARMONIES}
\title{HARMONIES}
\usage{
HARMONIES(
  count.matrix,
  phenotype,
  N.mcmc = 10000,
  b = 1,
  h = 20,
  sparsity.cutoff = 0.5,
  beta.stars = 0.05,
  n.rep = 20,
  bayes.fdr = 0.05,
  seed = 123
)
}
\arguments{
\item{count.matrix}{An \eqn{n*p} sequencing count matrix.
Columns represent the taxonomic features and rows represents the samples.
Set the column name to be the name of taxa, and all the taxa here should be on the same taxonomic level.}

\item{phenotype}{A phenotype indicator vector for all the samples (should be a vector of 0s if only have
one phenotype, or a vector of 0 and 1 if have 2 phenotypes. The current method can handle
at most 2 phenotypes)}

\item{N.mcmc}{Number of MCMC iterations}

\item{b}{Shape hyper-parameter for the variance term}

\item{h}{Scale hyper-parameter for the variance term}

\item{sparsity.cutoff}{A threshold between 0-1. Taxa with proportions of zeros larger than the threshold
will be dropped for the network inference}

\item{beta.stars}{Stability threshold for selection criteria}

\item{n.rep}{Number of random subsamples to take for network estimation}

\item{bayes.fdr}{Bayesian false discovery rate controlled for zero imputation (in the normalization step)}

\item{seed:}{Random seed}
}
\value{
A list with the following results:
\itemize{
  \item partial.corr: A list of the partical correlation estimations for group 0 and group 1 (only for two phenotypes) by HARMONIES
  \item edge.estimation: A list of data frames for group 0 and group 1 (only for two phenotypes) containing the edge information of the estimated network
  \item node.estimation: A data frame containing the node information of all the nodes shown in the estimated network(s)
}
}
\description{
The model consists of two major components: (1) a zero-inflated
negative binomial model with Dirichlet process prior for microbiome count data normalization;
(2) the graphical lasso algorithm with a stability-based parameter tuning process to obtain a sparse network.
}
