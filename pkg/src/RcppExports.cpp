// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// fitZINBDPP
List fitZINBDPP(IntegerMatrix Y, IntegerVector z, NumericVector s, int iter, bool DPP, IntegerMatrix S, bool aggregate, double b, double h, bool MRF, IntegerMatrix G, double phi_low, int mincount);
RcppExport SEXP _HARMONIES_fitZINBDPP(SEXP YSEXP, SEXP zSEXP, SEXP sSEXP, SEXP iterSEXP, SEXP DPPSEXP, SEXP SSEXP, SEXP aggregateSEXP, SEXP bSEXP, SEXP hSEXP, SEXP MRFSEXP, SEXP GSEXP, SEXP phi_lowSEXP, SEXP mincountSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type Y(YSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type z(zSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< bool >::type DPP(DPPSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type S(SSEXP);
    Rcpp::traits::input_parameter< bool >::type aggregate(aggregateSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< bool >::type MRF(MRFSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type G(GSEXP);
    Rcpp::traits::input_parameter< double >::type phi_low(phi_lowSEXP);
    Rcpp::traits::input_parameter< int >::type mincount(mincountSEXP);
    rcpp_result_gen = Rcpp::wrap(fitZINBDPP(Y, z, s, iter, DPP, S, aggregate, b, h, MRF, G, phi_low, mincount));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HARMONIES_fitZINBDPP", (DL_FUNC) &_HARMONIES_fitZINBDPP, 13},
    {NULL, NULL, 0}
};

RcppExport void R_init_HARMONIES(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
